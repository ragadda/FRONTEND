{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: [],\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    addItem: (state, action) => {\n      let alreadyExistMeal = 0;\n\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].mealId === action.payload.mealId) {\n          state[i].quantity += action.payload.quantity;\n          alreadyExistMeal = 1;\n        }\n      }\n\n      if (alreadyExistMeal === 0) {\n        state.push(action.payload);\n      }\n    },\n    editItem: (state, action) => {\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].mealId === action.payload.item.mealId) {\n          state[i].quantity = action.payload.itemQuantity;\n          return;\n        }\n      }\n    },\n    deleteItem: (state, action) => {\n      for (let i = 0; i < state.length; i++) {\n        console.log(\"usloo1: \", i, \" ok: \", action.payload);\n\n        if (state[i].mealId === action.payload) {\n          state.splice(i, 1);\n          console.log(\"usloo: \", i, \" ok: \", action.payload);\n        }\n      }\n    },\n    deleteAllItems: state => {\n      for (let i = 0; i < state.length; i++) {\n        state.splice(i);\n      }\n    }\n  } // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n\n});\nexport const {\n  addItem,\n  editItem,\n  deleteItem,\n  deleteAllItems\n} = cartSlice.actions; // more code...\n\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","reducers","addItem","state","action","alreadyExistMeal","i","length","mealId","payload","quantity","push","editItem","item","itemQuantity","deleteItem","console","log","splice","deleteAllItems","actions","reducer"],"sources":["C:/Users/Ragad Fares/Desktop/front/src/store-redux/cart/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const cartSlice = createSlice({\n    name: 'cart',\n    initialState: [],\n    \n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n    \n      addItem: (state, action) =>{\n        let alreadyExistMeal = 0\n        \n        for(let i=0; i<state.length; i++){\n          if(state[i].mealId === action.payload.mealId){\n            state[i].quantity += action.payload.quantity\n                alreadyExistMeal = 1;\n          }\n        }\n        if(alreadyExistMeal === 0){\n          state.push(action.payload);\n        }\n      },\n      \n      editItem: (state, action) =>{\n         for(let i=0; i<state.length; i++){\n           if(state[i].mealId === action.payload.item.mealId){\n             state[i].quantity = action.payload.itemQuantity\n             return;\n          }\n         }\n      },\n\n      deleteItem: (state, action) =>{\n        for(let i=0; i<state.length; i++){\n          console.log(\"usloo1: \",i, \" ok: \",action.payload)\n\n           if(state[i].mealId === action.payload){\n             state.splice(i,1);\n             console.log(\"usloo: \",i, \" ok: \",action.payload)\n          }\n         }\n      },\n      \n      deleteAllItems: (state) =>{\n        for(let i=0; i<state.length; i++){\n             state.splice(i);  \n         }\n      }\n    }\n    // The `extraReducers` field lets the slice handle actions defined elsewhere,\n    // including actions generated by createAsyncThunk or in other slices.\n   \n  });\n  export const { addItem, editItem, deleteItem, deleteAllItems } = cartSlice.actions;\n  // more code...\n  export default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACjCE,IAAI,EAAE,MAD2B;EAEjCC,YAAY,EAAE,EAFmB;EAIjC;EACAC,QAAQ,EAAE;IAERC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;MACzB,IAAIC,gBAAgB,GAAG,CAAvB;;MAEA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,KAAK,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;QAC/B,IAAGH,KAAK,CAACG,CAAD,CAAL,CAASE,MAAT,KAAoBJ,MAAM,CAACK,OAAP,CAAeD,MAAtC,EAA6C;UAC3CL,KAAK,CAACG,CAAD,CAAL,CAASI,QAAT,IAAqBN,MAAM,CAACK,OAAP,CAAeC,QAApC;UACIL,gBAAgB,GAAG,CAAnB;QACL;MACF;;MACD,IAAGA,gBAAgB,KAAK,CAAxB,EAA0B;QACxBF,KAAK,CAACQ,IAAN,CAAWP,MAAM,CAACK,OAAlB;MACD;IACF,CAdO;IAgBRG,QAAQ,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAkB;MACzB,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,KAAK,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;QAC/B,IAAGH,KAAK,CAACG,CAAD,CAAL,CAASE,MAAT,KAAoBJ,MAAM,CAACK,OAAP,CAAeI,IAAf,CAAoBL,MAA3C,EAAkD;UAChDL,KAAK,CAACG,CAAD,CAAL,CAASI,QAAT,GAAoBN,MAAM,CAACK,OAAP,CAAeK,YAAnC;UACA;QACF;MACD;IACH,CAvBO;IAyBRC,UAAU,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAkB;MAC5B,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,KAAK,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;QAC/BU,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBX,CAAvB,EAA0B,OAA1B,EAAkCF,MAAM,CAACK,OAAzC;;QAEC,IAAGN,KAAK,CAACG,CAAD,CAAL,CAASE,MAAT,KAAoBJ,MAAM,CAACK,OAA9B,EAAsC;UACpCN,KAAK,CAACe,MAAN,CAAaZ,CAAb,EAAe,CAAf;UACAU,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBX,CAAtB,EAAyB,OAAzB,EAAiCF,MAAM,CAACK,OAAxC;QACF;MACD;IACH,CAlCO;IAoCRU,cAAc,EAAGhB,KAAD,IAAU;MACxB,KAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,KAAK,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;QAC5BH,KAAK,CAACe,MAAN,CAAaZ,CAAb;MACH;IACH;EAxCO,CALuB,CA+CjC;EACA;;AAhDiC,CAAD,CAA7B;AAmDL,OAAO,MAAM;EAAEJ,OAAF;EAAWU,QAAX;EAAqBG,UAArB;EAAiCI;AAAjC,IAAoDrB,SAAS,CAACsB,OAApE,C,CACP;;AACA,eAAetB,SAAS,CAACuB,OAAzB"},"metadata":{},"sourceType":"module"}